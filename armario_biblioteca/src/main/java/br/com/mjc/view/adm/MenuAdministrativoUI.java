/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.mjc.view.adm;

import br.com.mjc.controller.BibliotecarioController;
import br.com.mjc.dto.BibliotecarioDTO;
import br.com.mjc.dto.InfoDTO;
import br.com.mjc.enums.Status;
import br.com.mjc.model.Bibliotecario;
import br.com.mjc.utils.Formato;
import br.com.mjc.utils.Mascara;
import br.com.mjc.utils.Tratamento;
import br.com.mjc.utils.Validador;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.List;

/**
 * @author moska
 */
public class MenuAdministrativoUI extends javax.swing.JFrame {

    private BibliotecarioController bibliotecarioController;
    private InfoDTO infoDTO;
    private BibliotecarioDTO bibliotecarioDTO;
    private List<JTextField> formBibliotecario = new ArrayList<>();
    private List<JLabel> msgValidacaoBibliotecario = new ArrayList<>();

    /**
     * Creates new form MenuAdministrativoUI
     */
    public MenuAdministrativoUI() {
        initComponents();
        initComplements();
        setExtendedState(MAXIMIZED_BOTH);
        radioGrupo.add(radioNome);
        radioGrupo.add(radioSiape);
        bibliotecarioController = new BibliotecarioController();
        bibliotecarioDTO = new BibliotecarioDTO();

        formBibliotecario.add(txtNome);
        formBibliotecario.add(txtSiape);
        formBibliotecario.add(txtCpf);
        formBibliotecario.add(txtTelefone);
        formBibliotecario.add(txtSenha);
        formBibliotecario.add(txtConfirmacaoSenha);
        formBibliotecario.add(txtEmail);

        msgValidacaoBibliotecario.add(msgNome);
        msgValidacaoBibliotecario.add(msgSiape);
        msgValidacaoBibliotecario.add(msgCpf);
        msgValidacaoBibliotecario.add(msgTelefone);
        msgValidacaoBibliotecario.add(msgSenha);
        msgValidacaoBibliotecario.add(msgConfirmacaoSenha);
        msgValidacaoBibliotecario.add(msgEmail);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioGrupo = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        tabEntidades = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        headerEmprestimo = new javax.swing.JPanel();
        bodyEmprestimo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        bodyBibliotecario = new javax.swing.JPanel();
        tabBibliotecario = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        radioNome = new javax.swing.JRadioButton();
        radioSiape = new javax.swing.JRadioButton();
        txtFiltro = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        checkBoxListarDesativados = new javax.swing.JCheckBox();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabListaBibliotecarios = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        labelNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        labelEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        titleContato = new javax.swing.JLabel();
        labelTelefone = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        titleDadosBibliotecario = new javax.swing.JLabel();
        labelCpf = new javax.swing.JLabel();
        txtCpf = new javax.swing.JTextField();
        labelSiape = new javax.swing.JLabel();
        txtSiape = new javax.swing.JTextField();
        labelSenha = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        labelConfirmarSenha = new javax.swing.JLabel();
        txtConfirmacaoSenha = new javax.swing.JPasswordField();
        msgNome = new javax.swing.JLabel();
        msgCpf = new javax.swing.JLabel();
        msgSiape = new javax.swing.JLabel();
        msgConfirmacaoSenha = new javax.swing.JLabel();
        msgSenha = new javax.swing.JLabel();
        msgEmail = new javax.swing.JLabel();
        msgDDD = new javax.swing.JLabel();
        msgTelefone = new javax.swing.JLabel();
        checkBoxAvtivatDesativarBibliotecario = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        heaerEstudante = new javax.swing.JPanel();
        bodyEstudante = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        headerArmario = new javax.swing.JPanel();
        bodyArmario = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        sair = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setLayout(new java.awt.BorderLayout());

        tabEntidades.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabEntidadesStateChanged(evt);
            }
        });

        jPanel2.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout headerEmprestimoLayout = new javax.swing.GroupLayout(headerEmprestimo);
        headerEmprestimo.setLayout(headerEmprestimoLayout);
        headerEmprestimoLayout.setHorizontalGroup(
            headerEmprestimoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 693, Short.MAX_VALUE)
        );
        headerEmprestimoLayout.setVerticalGroup(
            headerEmprestimoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
        );

        jPanel2.add(headerEmprestimo, java.awt.BorderLayout.PAGE_START);

        bodyEmprestimo.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº Armário", "Estudante", "Data Empréstimo", "Data Devlução"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        bodyEmprestimo.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.add(bodyEmprestimo, java.awt.BorderLayout.CENTER);

        tabEntidades.addTab("Empréstimos", jPanel2);

        jPanel3.setLayout(new java.awt.BorderLayout());

        bodyBibliotecario.setLayout(new java.awt.BorderLayout());

        tabBibliotecario.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabBibliotecarioStateChanged(evt);
            }
        });

        jPanel6.setLayout(new java.awt.BorderLayout());

        radioNome.setText("Nome");

        radioSiape.setText("Siape");
        radioSiape.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSiapeActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        checkBoxListarDesativados.setText("Listar desativados");
        checkBoxListarDesativados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxListarDesativadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkBoxListarDesativados)
                .addGap(204, 204, 204)
                .addComponent(radioNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioSiape)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscar)
                .addGap(8, 8, 8))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnBuscar)
                .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(radioNome)
                .addComponent(radioSiape)
                .addComponent(checkBoxListarDesativados))
        );

        jPanel6.add(jPanel15, java.awt.BorderLayout.PAGE_START);

        jPanel16.setLayout(new java.awt.BorderLayout());

        tabListaBibliotecarios.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        tabListaBibliotecarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "E-mail", "Siape", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabListaBibliotecarios.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tabListaBibliotecarios.setGridColor(new java.awt.Color(204, 204, 204));
        tabListaBibliotecarios.setRowHeight(25);
        tabListaBibliotecarios.setSelectionBackground(new java.awt.Color(153, 204, 255));
        tabListaBibliotecarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabListaBibliotecariosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabListaBibliotecarios);
        tabListaBibliotecarios.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (tabListaBibliotecarios.getColumnModel().getColumnCount() > 0) {
            tabListaBibliotecarios.getColumnModel().getColumn(0).setResizable(false);
            tabListaBibliotecarios.getColumnModel().getColumn(1).setResizable(false);
            tabListaBibliotecarios.getColumnModel().getColumn(2).setResizable(false);
            tabListaBibliotecarios.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel16.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPanel6.add(jPanel16, java.awt.BorderLayout.CENTER);

        tabBibliotecario.addTab("Bibliotecários", jPanel6);

        jPanel7.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 693, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel7.add(jPanel8, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 693, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel7.add(jPanel9, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );

        jPanel7.add(jPanel10, java.awt.BorderLayout.LINE_END);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );

        jPanel7.add(jPanel11, java.awt.BorderLayout.LINE_START);

        jPanel12.setLayout(new java.awt.BorderLayout());

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(267, Short.MAX_VALUE)
                .addComponent(btnCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSalvar)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        jPanel12.add(jPanel13, java.awt.BorderLayout.PAGE_END);

        labelNome.setText("Nome:");
        labelNome.setToolTipText("Ao menos dois nomes (embora existam pessoas que só tenham um nome, como por exemplo, o emperador Akihito do Japão, mas vamos deixá-las de fora).\nExatamente um espaço separando nomes.\nUm mesmo nome ou sobrenome pode ser composto, separado por hífen. Pode haver mais de um hífen (ex: \"Luís Augusto de Saxe-Coburgo-Gota\")\nAceitando acentos.\nA inicial de cada palavra deve ser maiúscula e as demais letras minúsculas.\nDeve aceitar conjunções inteiramente minúsculas.\nSobrenomes como \"O'Brian\", \"d'Alembert\" e \"McDonald\" devem ser aceitos.\nNão podem haver duas ou mais conjunções seguidas (ex: \"do da\"). Entretanto \"María Antonieta de las Nieves\" é um nome válido, então a conjunção pode ser composta.\nNomes e sobrenomes (mas não conjunções) devem ter ao menos duas letras.\nApóstrofos entre letras são permitidos (ex: \"Samuel Eto'o\"). Mas não podem estar no começo ou no final da palavra e nem estarem consecutivos.\nAlguns nomes tais como \"Martin Luther King Jr.\" e \"William Henry Gates III\" tem sufixos.");

        txtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNomeFocusLost(evt);
            }
        });

        labelEmail.setText("E-mail:");

        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });

        titleContato.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        titleContato.setText("Contato");

        labelTelefone.setText("Telefone:");

        txtTelefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefoneFocusLost(evt);
            }
        });
        txtTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefoneKeyReleased(evt);
            }
        });

        titleDadosBibliotecario.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        titleDadosBibliotecario.setText("Dados do Bibliotecário");

        labelCpf.setText("CPF:");

        txtCpf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCpfFocusLost(evt);
            }
        });
        txtCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCpfKeyReleased(evt);
            }
        });

        labelSiape.setText("Siape:");

        txtSiape.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSiapeFocusLost(evt);
            }
        });

        labelSenha.setText("Senha:");

        txtSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSenhaFocusLost(evt);
            }
        });

        labelConfirmarSenha.setText("Confirmar Senha:");

        txtConfirmacaoSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtConfirmacaoSenhaFocusLost(evt);
            }
        });

        msgNome.setFont(new java.awt.Font("Yu Gothic UI Light", 2, 10)); // NOI18N
        msgNome.setForeground(new java.awt.Color(255, 0, 0));
        msgNome.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        msgCpf.setFont(new java.awt.Font("Yu Gothic UI Light", 2, 10)); // NOI18N
        msgCpf.setForeground(new java.awt.Color(255, 0, 0));

        msgSiape.setFont(new java.awt.Font("Yu Gothic UI Light", 2, 10)); // NOI18N
        msgSiape.setForeground(new java.awt.Color(255, 0, 0));

        msgConfirmacaoSenha.setFont(new java.awt.Font("Yu Gothic UI Light", 2, 10)); // NOI18N
        msgConfirmacaoSenha.setForeground(new java.awt.Color(255, 0, 0));

        msgSenha.setFont(new java.awt.Font("Yu Gothic UI Light", 2, 10)); // NOI18N
        msgSenha.setForeground(new java.awt.Color(255, 0, 0));

        msgEmail.setFont(new java.awt.Font("Yu Gothic UI Light", 2, 10)); // NOI18N
        msgEmail.setForeground(new java.awt.Color(255, 0, 0));

        msgDDD.setFont(new java.awt.Font("Yu Gothic UI Light", 2, 10)); // NOI18N
        msgDDD.setForeground(new java.awt.Color(255, 0, 0));

        msgTelefone.setFont(new java.awt.Font("Yu Gothic UI Light", 2, 10)); // NOI18N
        msgTelefone.setForeground(new java.awt.Color(255, 0, 0));

        checkBoxAvtivatDesativarBibliotecario.setText("Desativar");
        checkBoxAvtivatDesativarBibliotecario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxAvtivatDesativarBibliotecarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(msgNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(txtEmail)
                    .addComponent(txtNome)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(titleDadosBibliotecario)
                            .addComponent(labelNome)
                            .addComponent(labelCpf)
                            .addComponent(msgCpf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCpf, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(labelSiape)
                            .addComponent(msgSiape, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(txtSiape))
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSenha, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtConfirmacaoSenha)
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(labelSenha)
                                            .addComponent(labelConfirmarSenha))
                                        .addGap(0, 97, Short.MAX_VALUE))
                                    .addComponent(msgConfirmacaoSenha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(msgSenha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(checkBoxAvtivatDesativarBibliotecario))))
                    .addComponent(msgEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(msgDDD, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(titleContato)
                            .addComponent(labelEmail)
                            .addComponent(labelTelefone)
                            .addComponent(msgTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleDadosBibliotecario)
                    .addComponent(checkBoxAvtivatDesativarBibliotecario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(msgNome, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(labelCpf)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(labelSenha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(msgCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(msgSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(labelSiape)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSiape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addComponent(labelConfirmarSenha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtConfirmacaoSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(msgConfirmacaoSenha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(msgSiape, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleContato)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(msgEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTelefone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(msgDDD, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(msgTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jPanel12.add(jPanel14, java.awt.BorderLayout.CENTER);

        jPanel7.add(jPanel12, java.awt.BorderLayout.CENTER);

        tabBibliotecario.addTab("Cadastro", jPanel7);

        bodyBibliotecario.add(tabBibliotecario, java.awt.BorderLayout.PAGE_START);

        jPanel3.add(bodyBibliotecario, java.awt.BorderLayout.CENTER);

        tabEntidades.addTab("Bibliotecário", jPanel3);

        jPanel4.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout heaerEstudanteLayout = new javax.swing.GroupLayout(heaerEstudante);
        heaerEstudante.setLayout(heaerEstudanteLayout);
        heaerEstudanteLayout.setHorizontalGroup(
            heaerEstudanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 693, Short.MAX_VALUE)
        );
        heaerEstudanteLayout.setVerticalGroup(
            heaerEstudanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );

        jPanel4.add(heaerEstudante, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout bodyEstudanteLayout = new javax.swing.GroupLayout(bodyEstudante);
        bodyEstudante.setLayout(bodyEstudanteLayout);
        bodyEstudanteLayout.setHorizontalGroup(
            bodyEstudanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 693, Short.MAX_VALUE)
        );
        bodyEstudanteLayout.setVerticalGroup(
            bodyEstudanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 551, Short.MAX_VALUE)
        );

        jPanel4.add(bodyEstudante, java.awt.BorderLayout.CENTER);

        tabEntidades.addTab("Estudantes", jPanel4);

        jPanel5.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout headerArmarioLayout = new javax.swing.GroupLayout(headerArmario);
        headerArmario.setLayout(headerArmarioLayout);
        headerArmarioLayout.setHorizontalGroup(
            headerArmarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 693, Short.MAX_VALUE)
        );
        headerArmarioLayout.setVerticalGroup(
            headerArmarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );

        jPanel5.add(headerArmario, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout bodyArmarioLayout = new javax.swing.GroupLayout(bodyArmario);
        bodyArmario.setLayout(bodyArmarioLayout);
        bodyArmarioLayout.setHorizontalGroup(
            bodyArmarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 693, Short.MAX_VALUE)
        );
        bodyArmarioLayout.setVerticalGroup(
            bodyArmarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 551, Short.MAX_VALUE)
        );

        jPanel5.add(bodyArmario, java.awt.BorderLayout.CENTER);

        tabEntidades.addTab("Armários", jPanel5);

        jPanel1.add(tabEntidades, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        fileMenu.setText("File");

        sair.setText("Sair");
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });
        fileMenu.add(sair);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");
        jMenuBar1.add(editMenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initComplements() {
        this.setLocationRelativeTo(null);
        this.checkBoxAvtivatDesativarBibliotecario.setVisible(false);
    }

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        dispose();
    }//GEN-LAST:event_sairActionPerformed

    private void listarBibliotecarios() {
        List<Bibliotecario> bibliotecarioList = bibliotecarioController.listarTodos();
        DefaultTableModel modeloColunasTabela = (DefaultTableModel) tabListaBibliotecarios.getModel();
        while (modeloColunasTabela.getRowCount() != 0) {
            modeloColunasTabela.removeRow(0);
        }

        for (int i = 0; i < bibliotecarioList.size(); i++) {
            Object[] bibliotecarioRow = new Object[5];
            bibliotecarioRow[0] = bibliotecarioList.get(i).getNome();
            bibliotecarioRow[1] = bibliotecarioList.get(i).getEmail();
            bibliotecarioRow[2] = bibliotecarioList.get(i).getSiape();
            bibliotecarioRow[3] = Formato.telefone(bibliotecarioList.get(i).getTelefone());
            modeloColunasTabela.addRow(bibliotecarioRow);
        }
    }

    private void listarBibliotecariosDesativados() {
        List<Bibliotecario> bibliotecarioList = bibliotecarioController.listarDesativados();
        DefaultTableModel modeloColunasTabela = (DefaultTableModel) tabListaBibliotecarios.getModel();
        while (modeloColunasTabela.getRowCount() != 0) {
            modeloColunasTabela.removeRow(0);
        }

        for (int i = 0; i < bibliotecarioList.size(); i++) {
            Object[] bibliotecarioRow = new Object[5];
            bibliotecarioRow[0] = bibliotecarioList.get(i).getNome();
            bibliotecarioRow[1] = bibliotecarioList.get(i).getEmail();
            bibliotecarioRow[2] = bibliotecarioList.get(i).getSiape();
            bibliotecarioRow[3] = Formato.telefone(bibliotecarioList.get(i).getTelefone());
            modeloColunasTabela.addRow(bibliotecarioRow);
        }
    }

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (radioNome.isSelected()) {
            System.out.println("Nome:");
        } else if (radioSiape.isSelected()) {
            System.out.println("Siape:");
        } else {
            JOptionPane.showMessageDialog(null, "Filtro não selecionado!", "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void radioSiapeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSiapeActionPerformed

    }//GEN-LAST:event_radioSiapeActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        bibliotecarioDTO.setSiape(txtSiape.getText());
        if (txtNome.getText().isEmpty()) {
            msgNome.setText("Nome é obrigatório!");
            txtNome.requestFocus();
            return;
        } else {
            bibliotecarioDTO.setNome(txtNome.getText());
        }

        if (txtCpf.getText().isEmpty()) {
            msgCpf.setText("Cpf é obrigatório!");
            txtCpf.requestFocus();
            return;
        } else {
            bibliotecarioDTO.setCpf(txtCpf.getText());
        }

        if (txtSiape.getText().isEmpty()) {
            msgSiape.setText("Siape é obrigatório!");
            txtSiape.requestFocus();
            return;
        } else {
            bibliotecarioDTO.setSiape(txtSiape.getText());
        }

        String senha = new String(txtSenha.getPassword());
        if (senha.isEmpty()) {
            msgSenha.setText("Senha é obrigatória!");
            txtSenha.requestFocus();
            return;
        } else {
            bibliotecarioDTO.setSenha(senha);
        }

        String confirmacaoSenha = new String(txtConfirmacaoSenha.getPassword());
        if (confirmacaoSenha.isEmpty()) {
            msgConfirmacaoSenha.setText("Confirmação de senha é obrigatória!");
            txtConfirmacaoSenha.requestFocus();
            return;
        }

        if (txtEmail.getText().isEmpty()) {
            msgEmail.setText("Email é obrigatório!");
            txtEmail.requestFocus();
            return;
        } else {
            bibliotecarioDTO.setEmail(txtEmail.getText());
        }

        if (txtTelefone.getText().isEmpty()) {
            msgTelefone.setText("Telefone é obrigatório!");
            txtTelefone.requestFocus();
            return;
        } else {
            bibliotecarioDTO.setTelefone(Tratamento.limparNumero(txtTelefone.getText()));
        }

        if (bibliotecarioDTO.getId() == null) {
            infoDTO = bibliotecarioController.cadastar(bibliotecarioDTO);
            if (infoDTO.getStatus().equals(Status.SUCESSO)) {
                for (JTextField form : formBibliotecario) {
                    form.setText("");
                }
                int resposta = JOptionPane.showConfirmDialog(null, infoDTO.getMensagem() + "\nDeseja cadastrar um novo bibliotecário?", infoDTO.getStatus().toString(), JOptionPane.INFORMATION_MESSAGE);
                if (resposta == JOptionPane.NO_OPTION) {
                    listarBibliotecarios();
                    tabBibliotecario.setSelectedIndex(0);
                }
            } else {
                JOptionPane.showMessageDialog(null, infoDTO.getMensagem(), infoDTO.getStatus().toString(), JOptionPane.ERROR_MESSAGE);
            }
        } else {
            infoDTO = bibliotecarioController.alterar(bibliotecarioDTO);
            if (infoDTO.getStatus().equals(Status.SUCESSO)) {
                for (JTextField form : formBibliotecario) {
                    form.setText("");
                }
                JOptionPane.showMessageDialog(null, infoDTO.getMensagem(), infoDTO.getStatus().toString(), JOptionPane.INFORMATION_MESSAGE);
                listarBibliotecarios();
                tabBibliotecario.setTitleAt(1, "Cadastro");
                tabBibliotecario.setSelectedIndex(0);
            } else {
                JOptionPane.showMessageDialog(null, infoDTO.getMensagem(), infoDTO.getStatus().toString(), JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        if (!txtEmail.getText().isEmpty()) {
            if (Validador.validarEmail(txtEmail.getText())) {
                bibliotecarioDTO.setEmail(txtEmail.getText());
                msgEmail.setText("");
            } else {
                msgEmail.setText("E-mail inválido!");
            }
        }
    }//GEN-LAST:event_txtEmailFocusLost

    private void txtConfirmacaoSenhaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtConfirmacaoSenhaFocusLost
        String senha = new String(txtSenha.getPassword());
        String confirmacaoSenha = new String(txtConfirmacaoSenha.getPassword());
        if (!confirmacaoSenha.isEmpty()) {
            if (Validador.confirmarSenha(senha, confirmacaoSenha)) {
                bibliotecarioDTO.setSenha(senha);
                msgConfirmacaoSenha.setText("");
            } else {
                msgConfirmacaoSenha.setText("As senhas não conferem!");
            }
        }
    }//GEN-LAST:event_txtConfirmacaoSenhaFocusLost

    private void txtNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFocusLost
        if (!txtNome.getText().isEmpty()) {
            if (Validador.validarNome(txtNome.getText())) {
                bibliotecarioDTO.setNome(txtNome.getText());
                msgNome.setText("");
            } else {
                msgNome.setText("Nome inválido!");
            }
        }
    }//GEN-LAST:event_txtNomeFocusLost

    private void txtCpfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCpfFocusLost
        if (!txtCpf.getText().isEmpty()) {
            if (Validador.validarCPF(Tratamento.limparNumero(txtCpf.getText()))) {
                bibliotecarioDTO.setCpf(txtCpf.getText());
                msgCpf.setText("");
            } else {
                msgCpf.setText("CPF inválido!");
            }
        }
    }//GEN-LAST:event_txtCpfFocusLost

    private void txtCpfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCpfKeyReleased
        txtCpf.setText(Mascara.cpf(txtCpf.getText()));
    }//GEN-LAST:event_txtCpfKeyReleased

    private void txtTelefoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefoneKeyReleased
        txtTelefone.setText(Mascara.telefone(txtTelefone.getText()));
    }//GEN-LAST:event_txtTelefoneKeyReleased

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        boolean isVazio = true;
        for (JTextField form : formBibliotecario) {
            if (!form.getText().equals("") || !form.getText().isEmpty()) {
                isVazio = false;
                break;
            }
        }

        if (!isVazio) {
            int resposta = JOptionPane.showConfirmDialog(null, "Ao clicar em \"OK\" os dados deste formulário será apagado!", "Você deseja cancelar?", JOptionPane.WARNING_MESSAGE);
            if (resposta == JOptionPane.YES_OPTION) {
                for (JTextField form : formBibliotecario) {
                    form.setText("");
                }

                for (JLabel msg : msgValidacaoBibliotecario) {
                    msg.setText("");
                }
            }
        }
        tabBibliotecario.setSelectedIndex(0);
        tabBibliotecario.setTitleAt(1, "Cadastro");
        checkBoxAvtivatDesativarBibliotecario.setEnabled(true);
        checkBoxAvtivatDesativarBibliotecario.setVisible(false);
        for (JTextField form : formBibliotecario) {
            if (!form.isEnabled()) {
                form.setEnabled(true);
            }
        }
        checkBoxListarDesativados.setSelected(false);
        listarBibliotecarios();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtSenhaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSenhaFocusLost
        String senha = new String(txtSenha.getPassword());
        if (!senha.isEmpty()) {
            bibliotecarioDTO.setSenha(senha);
            msgSenha.setText("");
        }
    }//GEN-LAST:event_txtSenhaFocusLost

    private void txtSiapeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSiapeFocusLost
        if (!txtSiape.getText().isEmpty()) {
            bibliotecarioDTO.setSiape(txtSiape.getText());
            msgSiape.setText("");
        }
    }//GEN-LAST:event_txtSiapeFocusLost

    private void txtTelefoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefoneFocusLost
        if (!txtTelefone.getText().isEmpty()) {
            bibliotecarioDTO.setTelefone(txtTelefone.getText());
            msgTelefone.setText("");
        }
    }//GEN-LAST:event_txtTelefoneFocusLost

    private void tabEntidadesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabEntidadesStateChanged
        if (tabEntidades.getSelectedIndex() == 1) {
            listarBibliotecarios();
        }
    }//GEN-LAST:event_tabEntidadesStateChanged

    private void tabListaBibliotecariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabListaBibliotecariosMouseClicked
        DefaultTableModel modeloColunasTabela = (DefaultTableModel) tabListaBibliotecarios.getModel();
        int index = tabListaBibliotecarios.getSelectedRow();
        String siape = (String) modeloColunasTabela.getValueAt(index, 2);
        BibliotecarioDTO bibliotecarioDTOEdicao = new BibliotecarioDTO();
        bibliotecarioDTOEdicao = bibliotecarioController.buscarPorSiape(siape);

        bibliotecarioDTO.setId(bibliotecarioDTOEdicao.getId());
        bibliotecarioDTO.setDataCriacao(bibliotecarioDTOEdicao.getDataCriacao());
        txtNome.setText(bibliotecarioDTOEdicao.getNome());
        txtCpf.setText(bibliotecarioDTOEdicao.getCpf());
        txtSiape.setText(bibliotecarioDTOEdicao.getSiape());
        txtSenha.setText(bibliotecarioDTOEdicao.getSenha());
        txtEmail.setText(bibliotecarioDTOEdicao.getEmail());
        txtTelefone.setText(Formato.telefone(bibliotecarioDTOEdicao.getTelefone()));

        tabBibliotecario.setTitleAt(1, "Edição");
        tabBibliotecario.setSelectedIndex(1);
        checkBoxAvtivatDesativarBibliotecario.setVisible(true);
        checkBoxAvtivatDesativarBibliotecario.setSelected(false);

        if (checkBoxListarDesativados.isSelected()) {
            checkBoxAvtivatDesativarBibliotecario.setText("Ativar");
            for (JTextField form : formBibliotecario) {
                form.setEnabled(false);
            }
        } else {
            for (JTextField form : formBibliotecario) {
                form.setEnabled(true);
            }
        }

    }//GEN-LAST:event_tabListaBibliotecariosMouseClicked

    private void checkBoxAvtivatDesativarBibliotecarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxAvtivatDesativarBibliotecarioActionPerformed
        if (checkBoxAvtivatDesativarBibliotecario.getText().equals("Desativar")) {
            if (checkBoxAvtivatDesativarBibliotecario.isVisible() && checkBoxAvtivatDesativarBibliotecario.isSelected()) {
                int resposta = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja desativar o bibliotecário?", "Aviso!", JOptionPane.WARNING_MESSAGE);
                if (resposta == JOptionPane.YES_OPTION) {
                    for (JTextField form : formBibliotecario) {
                        form.setEnabled(false);
                    }
                    String senha = new String(txtSenha.getPassword());
                    bibliotecarioDTO.setNome(txtNome.getText());
                    bibliotecarioDTO.setCpf(txtCpf.getText());
                    bibliotecarioDTO.setSiape(txtSiape.getText());
                    bibliotecarioDTO.setSenha(senha);
                    bibliotecarioDTO.setEmail(txtEmail.getText());
                    bibliotecarioDTO.setTelefone(Tratamento.limparNumero(txtTelefone.getText()));
                    infoDTO = bibliotecarioController.excluirLogica(bibliotecarioDTO);
                    if (infoDTO.getStatus().equals(Status.SUCESSO)) {
                        JOptionPane.showMessageDialog(null, infoDTO.getMensagem(), infoDTO.getStatus().toString(), JOptionPane.INFORMATION_MESSAGE);
                        for (JTextField form : formBibliotecario) {
                            form.setEnabled(true);
                            form.setText("");
                        }
                        listarBibliotecarios();
                        tabBibliotecario.setTitleAt(1, "Cadastro");
                        tabBibliotecario.setSelectedIndex(0);
                        checkBoxListarDesativados.setSelected(false);
                    } else {
                        JOptionPane.showMessageDialog(null, infoDTO.getMensagem(), infoDTO.getStatus().toString(), JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    for (JTextField form : formBibliotecario) {
                        form.setEnabled(true);
                    }
                }
            }
            checkBoxAvtivatDesativarBibliotecario.setSelected(false);
        }

        if (checkBoxAvtivatDesativarBibliotecario.getText().equals("Ativar")){
            String senha = new String(txtSenha.getPassword());
            bibliotecarioDTO.setNome(txtNome.getText());
            bibliotecarioDTO.setCpf(txtCpf.getText());
            bibliotecarioDTO.setSiape(txtSiape.getText());
            bibliotecarioDTO.setSenha(senha);
            bibliotecarioDTO.setEmail(txtEmail.getText());
            bibliotecarioDTO.setTelefone(Tratamento.limparNumero(txtTelefone.getText()));
            infoDTO = bibliotecarioController.ativarLogica(bibliotecarioDTO);
            if (infoDTO.getStatus().equals(Status.SUCESSO)) {
                JOptionPane.showMessageDialog(null, infoDTO.getMensagem(), infoDTO.getStatus().toString(), JOptionPane.INFORMATION_MESSAGE);
                for (JTextField form : formBibliotecario) {
                    form.setEnabled(true);
                }

                checkBoxAvtivatDesativarBibliotecario.setText("Desativar");
                if (checkBoxAvtivatDesativarBibliotecario.isSelected()){
                    checkBoxAvtivatDesativarBibliotecario.setSelected(false);
                }
//                tabBibliotecario.setTitleAt(1, "Cadastro");
//                tabBibliotecario.setSelectedIndex(0);
            } else {
                JOptionPane.showMessageDialog(null, infoDTO.getMensagem(), infoDTO.getStatus().toString(), JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_checkBoxAvtivatDesativarBibliotecarioActionPerformed

    private void checkBoxListarDesativadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxListarDesativadosActionPerformed
        if (checkBoxListarDesativados.isVisible() && checkBoxListarDesativados.isSelected()) {
            listarBibliotecariosDesativados();
        } else {
            listarBibliotecarios();
        }
    }//GEN-LAST:event_checkBoxListarDesativadosActionPerformed

    private void tabBibliotecarioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabBibliotecarioStateChanged
        String tituloAba = tabBibliotecario.getTitleAt(1);
    if (tituloAba.equals("Editar")){
        String teste = "Aqui";
    }
    }//GEN-LAST:event_tabBibliotecarioStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bodyArmario;
    private javax.swing.JPanel bodyBibliotecario;
    private javax.swing.JPanel bodyEmprestimo;
    private javax.swing.JPanel bodyEstudante;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JCheckBox checkBoxAvtivatDesativarBibliotecario;
    private javax.swing.JCheckBox checkBoxListarDesativados;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JPanel headerArmario;
    private javax.swing.JPanel headerEmprestimo;
    private javax.swing.JPanel heaerEstudante;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelConfirmarSenha;
    private javax.swing.JLabel labelCpf;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelSenha;
    private javax.swing.JLabel labelSiape;
    private javax.swing.JLabel labelTelefone;
    private javax.swing.JLabel msgConfirmacaoSenha;
    private javax.swing.JLabel msgCpf;
    private javax.swing.JLabel msgDDD;
    private javax.swing.JLabel msgEmail;
    private javax.swing.JLabel msgNome;
    private javax.swing.JLabel msgSenha;
    private javax.swing.JLabel msgSiape;
    private javax.swing.JLabel msgTelefone;
    private javax.swing.ButtonGroup radioGrupo;
    private javax.swing.JRadioButton radioNome;
    private javax.swing.JRadioButton radioSiape;
    private javax.swing.JMenuItem sair;
    private javax.swing.JTabbedPane tabBibliotecario;
    private javax.swing.JTabbedPane tabEntidades;
    private javax.swing.JTable tabListaBibliotecarios;
    private javax.swing.JLabel titleContato;
    private javax.swing.JLabel titleDadosBibliotecario;
    private javax.swing.JPasswordField txtConfirmacaoSenha;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtNome;
    private javax.swing.JPasswordField txtSenha;
    private javax.swing.JTextField txtSiape;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
